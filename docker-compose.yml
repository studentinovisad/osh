services:
  crowdsec:
    image: docker.io/crowdsecurity/crowdsec:v1.6.4
    environment:
      COLLECTIONS: crowdsecurity/traefik crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules
      CUSTOM_HOSTNAME: crowdsec
      BOUNCER_KEY_TRAEFIK: ${BOUNCER_KEY_TRAEFIK}
    volumes:
      - "./acquis.yaml:/etc/crowdsec/acquis.yaml:ro,z"
      - "traefik-logs-vol:/var/log/traefik:ro,z"
      - "crowdsec-db-vol:/var/lib/crowdsec/data:Z"
      - "crowdsec-conf-vol:/etc/crowdsec:Z"
    networks:
      - internal
    restart: unless-stopped
  traefik:
    depends_on:
      - crowdsec
    image: docker.io/library/traefik:v3.2.2
    command:
      - "--accesslog"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:8443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--experimental.plugins.bouncer.modulename=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
      - "--experimental.plugins.bouncer.version=v1.3.5"
    ports:
      - "80:8080"
      - "443:8443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro,z"
      - "traefik-logs-vol:/var/log/traefik:z"
      - "traefik-acme-vol:/acme:Z"
    networks:
      - internal
    restart: unless-stopped
  frontend:
    image: docker.io/sythinian/open-stream-hub-frontend:latest # TODO: not latest
    depends_on:
      - backend
    environment:
      - VITE_REST_API_HOST=https://${DOMAIN}
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.middlewares=crowdsec@docker,auth@docker"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH}"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecmode=stream"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapikey=${BOUNCER_KEY_TRAEFIK}"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecappsecenabled=true"
    restart: unless-stopped
  backend:
    image: docker.io/sythinian/open-stream-hub-backend:latest # TODO: not latest
    depends_on:
      - mongodb
    ports:
      - "1935:1935"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/open-stream-hubV2
      - REST_API_PORT=6636
      - RTMP_SERVER_PORT=1935
      - RTMP_INJECT_HOST=rtmp://${RTMP_DOMAIN}
      - RTMP_INJECT_ROOT=/inject
      - RTMP_WATCH_ROOT=/watch
      - HSL_PREVIEW_ENABLED=false # Consumes a lot of cpu
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.middlewares=crowdsec@docker,auth@docker"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=6636"
      - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH}"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecmode=stream"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapikey=${BOUNCER_KEY_TRAEFIK}"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecappsecenabled=true"
    restart: unless-stopped
  mongodb:
    image: docker.io/library/mongo:4 # Has to be 4 when AVX isn't supported
    volumes:
      - "mongodb-data-vol:/data/db:Z"
    networks:
      - internal
    restart: unless-stopped
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy:14
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PASSWORD_HASH=${WGUI_PASSWORD}
      - WG_HOST=${VPN_DOMAIN}
      - WG_DEFAULT_ADDRESS=10.69.69.x
      - WG_DEFAULT_DNS=9.9.9.9,149.112.112.112
      - WG_MTU=1420
      - WG_ALLOWED_IPS=10.69.69.0/24
      - WG_PERSISTENT_KEEPALIVE=25
      - UI_TRAFFIC_STATS=false
    volumes:
      - "wg-conf-vol:/etc/wireguard:Z"
    ports:
      - "51820:51820/udp"
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wgui.rule=Host(`${VPN_DOMAIN}`)"
      - "traefik.http.routers.wgui.middlewares=crowdsec@docker"
      - "traefik.http.routers.wgui.entrypoints=websecure"
      - "traefik.http.routers.wgui.tls=true"
      - "traefik.http.routers.wgui.tls.certresolver=letsencrypt"
      - "traefik.http.services.wgui.loadbalancer.server.port=51821"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.enabled=true"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecmode=stream"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapikey=${BOUNCER_KEY_TRAEFIK}"
      - "traefik.http.middlewares.crowdsec.plugin.bouncer.crowdsecappsecenabled=true"
    restart: unless-stopped
networks:
  internal:
volumes:
  crowdsec-db-vol:
  crowdsec-conf-vol:
  traefik-logs-vol:
  traefik-acme-vol:
  mongodb-data-vol:
  wg-conf-vol:
